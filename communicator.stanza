defpackage communicator :
    import core
    import labyrinth

var term : True|False

public defstruct Communicator :
    game : Labyrinth
    ;jbot :
    ;usbot :
    answersOrBounds : String with : (setter => set-answersOrBounds)
    validAnswers : Tuple<String> with : (setter => set-validAnswers)
    ;display : Tuple<String>
    tooltips : Tuple<String> with : (setter => set-tooltips)
    ;webdata_ready :
    ;webanswer : String
    ;webanswer_ready :
    


public defn make-communicator (lab : Labyrinth, usplayer : String, jihadistplayer : String, terminal : True|False, log : Int) :
    term = terminal
    val comm = Communicator(
        lab
        ""      ; answersOrBounds
        []      ; validAnswers
        []      ; tooltips
    )
    comm

public defn queryGeneric (comm : Communicator, who : String, msg : String, validAnswers : Tuple<String>, reason : String, 
                            displays : Tuple<String>, tooltips : Tuple<String>|False, canNull : True|False):
    "n"
    
public defn endOneGame (comm : Communicator) :
    set-answersOrBounds(comm, "")
    set-validAnswers(comm, [])
    set-tooltips(comm, [])
    ; self.webdata_ready.set()